/*
 * 작성일 : 2024년, 4월, 16일
 * 작성자 : 컴퓨터공학부 202395007 김수종
 * 설명 : 배열에 저장된 값 중 최대값과 최소값을 출력하시오.
 * 
 * 문제분석 : 최대값, 최소값을 찾기 위해서 반드시 비교 대상이 있어야 함.
 * 			{34, 23, 56, 12, 77} 이 배열에서 초기 비교 대상을
 * 			첫 번쨰 값을 기준으로 비교한다. -> 0번지에 저장된 값을 기분으로 비교한다.
 * 			비교 대상인 0번지 값은 비교할 필요는 없다. -> 반복은 1번지부터 시작한다.
 * 			배열에 저장된 값을 비교하여
 * 			가장 큰 값을 max 변수에 저장, 가장 작은 값은 min 변수에 저장한다.
 * 			
 *
 * 알고리즘 : 1. 배열을 생성 후 값을 저장하여 초기화 시킨다.
 * 			2. 비교 기준을 배열의, 0번지로 설정한다.
 *          3. 배열을 변수 i = 1번지부터 배열의 길이까지 1씩 증가하면서 반복
 *          	3-1. 만약 현재 저장된 최소값이 배열의 i 번지의 값보다 크면
 *          		3-1-1). 최소값은 배열의 i 번지 값으로 변경한다.
 *          	3-2. 만약 현재 저장된 최대값이 배열의 i 번지의 값보다 작으면
 *          		3-2-1). 최대값은 배열의 i 번지 값으로 변경한다.
 *          4. 최종 최대값, 최소값 출력
 */
public class ArrayTest02 {

	public static void main(String[] args) {
		// 배열 생성 및 초기화
		int num[] = {17, 18, 55, 72, 67, 79, 11, 15, 69, 91};
		
		System.out.println("일반 for문 사용");
		// 비교 기준 설정
		int min = num[0];
		int max = num[0];
		
		// 배열을 반복하면서 배열 요소와 비교하며 최대값, 최소값을 구한다.
		for(int i = 1; i < num.length; i++) {
			if(min>num[i]) min=num[i];
			if(max<num[i]) max=num[i];
		}
		
		// 최종 최대값, 최소값 출력
		System.out.println("배열의 최대값 : " + max);
		System.out.println("배열의 최소값 : " + min);
		
		// 확장된 for문
		System.out.println("\n확장된 for문 사용");
		
		// 비교 기준 설정
		min = num[0];
		max = num[0];
		
		// 확장된 for문 (=foreach)
		for (int j : num) {
			if(min>j) min=j;
			if(max<j) max=j;
		}
		
		// 최종 최대값, 최소값 출력
		System.out.println("배열의 최대값 : " + max);
		System.out.println("배열의 최소값 : " + min);
	}
}
